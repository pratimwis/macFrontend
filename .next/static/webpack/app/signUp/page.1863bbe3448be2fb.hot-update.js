"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/signUp/page",{

/***/ "(app-pages-browser)/./api/index.ts":
/*!**********************!*\
  !*** ./api/index.ts ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logout: () => (/* binding */ logout),\n/* harmony export */   signUp: () => (/* binding */ signUp)\n/* harmony export */ });\n// utils/api.js or wherever you handle API calls\nasync function signUp(param) {\n    let { email, fullName, password } = param;\n    try {\n        const response = await fetch('https://macbackend.onrender.com/api/auth/signup', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            credentials: 'include',\n            body: JSON.stringify({\n                email,\n                fullName,\n                password\n            })\n        });\n        const data = await response.json();\n        if (!(data === null || data === void 0 ? void 0 : data.success)) {\n            window.alert((data === null || data === void 0 ? void 0 : data.message) || \"Signup failed\");\n        }\n        return data;\n    } catch (error) {\n        console.error('Signup error:', error);\n        throw error;\n    }\n}\nasync function logout() {}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwaS9pbmRleC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGdEQUFnRDtBQUV6QyxlQUFlQSxPQUFPLEtBUzVCO1FBVDRCLEVBQzNCQyxLQUFLLEVBQ0xDLFFBQVEsRUFDUkMsUUFBUSxFQU1ULEdBVDRCO0lBVzNCLElBQUk7UUFDRixNQUFNQyxXQUFXLE1BQU1DLE1BQU0sbURBQW1EO1lBQzlFQyxRQUFRO1lBQ1JDLFNBQVM7Z0JBQ1AsZ0JBQWdCO1lBQ2xCO1lBQ0FDLGFBQWE7WUFDYkMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO2dCQUNuQlY7Z0JBQ0FDO2dCQUNBQztZQUNGO1FBQ0Y7UUFFQSxNQUFNUyxPQUFPLE1BQU1SLFNBQVNTLElBQUk7UUFFaEMsSUFBSSxFQUFDRCxpQkFBQUEsMkJBQUFBLEtBQU1FLE9BQU8sR0FBRTtZQUNsQkMsT0FBT0MsS0FBSyxDQUFDSixDQUFBQSxpQkFBQUEsMkJBQUFBLEtBQU1LLE9BQU8sS0FBSTtRQUNoQztRQUVBLE9BQU9MO0lBQ1QsRUFBRSxPQUFPTSxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxpQkFBaUJBO1FBQy9CLE1BQU1BO0lBQ1I7QUFDRjtBQUVPLGVBQWVFLFVBRXRCIiwic291cmNlcyI6WyIvaG9tZS93aXMvRGVza3RvcC9SYW5hLVdpcy9Mb2dJblByb2plY3QvZnJvbnRlbnQvYXBpL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHV0aWxzL2FwaS5qcyBvciB3aGVyZXZlciB5b3UgaGFuZGxlIEFQSSBjYWxsc1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2lnblVwKHtcbiAgZW1haWwsXG4gIGZ1bGxOYW1lLFxuICBwYXNzd29yZCxcblxufToge1xuICBlbWFpbDogc3RyaW5nO1xuICBmdWxsTmFtZTogc3RyaW5nO1xuICBwYXNzd29yZDogc3RyaW5nO1xufSkge1xuICBcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwczovL21hY2JhY2tlbmQub25yZW5kZXIuY29tL2FwaS9hdXRoL3NpZ251cCcsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgfSxcbiAgICAgIGNyZWRlbnRpYWxzOiAnaW5jbHVkZScsIC8vIEltcG9ydGFudCBpZiB5b3UncmUgc2V0dGluZyBjb29raWVzIGxpa2UgSldUXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGVtYWlsLFxuICAgICAgICBmdWxsTmFtZSxcbiAgICAgICAgcGFzc3dvcmQsXG4gICAgICB9KSxcbiAgICB9KTtcblxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgICBpZiAoIWRhdGE/LnN1Y2Nlc3MpIHtcbiAgICAgIHdpbmRvdy5hbGVydChkYXRhPy5tZXNzYWdlIHx8IFwiU2lnbnVwIGZhaWxlZFwiKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZGF0YTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdTaWdudXAgZXJyb3I6JywgZXJyb3IpO1xuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBsb2dvdXQoKXtcblxufVxuXG5cblxuIl0sIm5hbWVzIjpbInNpZ25VcCIsImVtYWlsIiwiZnVsbE5hbWUiLCJwYXNzd29yZCIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiY3JlZGVudGlhbHMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJqc29uIiwic3VjY2VzcyIsIndpbmRvdyIsImFsZXJ0IiwibWVzc2FnZSIsImVycm9yIiwiY29uc29sZSIsImxvZ291dCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./api/index.ts\n"));

/***/ })

});